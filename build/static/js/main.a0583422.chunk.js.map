{"version":3,"sources":["logo.svg","componets/Button.js","componets/Header.js","componets/Task.js","componets/Tasks.js","componets/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","headingStyle","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0583422.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n    return (\n    <button \n    onClick={onClick} \n    style={{backgroundColor: color}}\n    className = 'btn'> \n        {text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func, \n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return (\n        <header className ='header'>\n            <h1 style = {headingStyle}>\n                {title}\n            </h1>\n            <Button color= {showAdd ? 'red' : 'green'} text = {showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired, \n}\n\nconst headingStyle = {\n    color: 'red', \n    backgroundColor: 'black',\n}\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) =>{\n    return (\n        <div className = {`task ${task.reminder ? 'reminder':''}`} onDoubleClick={() =>  onToggle(task.id)}>\n                <h3>\n                    {task.text}<FaTimes style={{color: 'red', cursor: 'pointer'}}\n                    onClick = {() => onDelete(task.id)}/>\n                </h3>\n                <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) =>{\n    return(\n        <>\n        {tasks.map((task) => (\n            <Task key={task.id} task = {task} \n            onDelete={onDelete} \n            onToggle={onToggle}/>\n        ))}\n        </>\n    )\n}\n\nexport default Tasks","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const[text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text){\n          alert('Please add a task!')\n          return\n        }\n      \n        onAdd({text, day, reminder})\n      \n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className = 'add-form' onSubmit = {onSubmit}>\n            <div className = 'form-control'>\n                <label>\n                    Task\n                </label>    \n                <input type = 'text' placeholder = 'Add Task' value={text} onChange = {(e) =>\n                setText(e.target.value) }/>\n            </div>\n            <div className = 'form-control'>\n                <label>\n                    Day & Time\n                </label>    \n                <input type = 'text' placeholder = 'Add Day & Time' value={day} onChange = {(e) =>\n                setDay(e.target.value)}/>\n            </div>\n            <div className = 'form-control form-control-check'>\n                <label>\n                    Set Reminder\n                </label>    \n                <input \n                    type = 'checkbox' \n                    checked = {reminder}\n                    value = {reminder} \n                    onChange = {(e) =>\n                    setReminder(e.currentTarget.checked)}/>\n            </div>  \n            <input type = 'submit' value = 'Save Task' className = 'btn btn-block'/>\n        </form>\n     )\n }\n \n export default AddTask\n ","import {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport Header from './componets/Header'\nimport Button from './componets/Button'\nimport Tasks from './componets/Tasks'\nimport AddTask from './componets/AddTask'\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(true)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting ar school',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    },\n    ])\n\n//Add task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random()*10000)+1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n//Delete task\nconst deleteTask = (id)=>{\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder:  !task.reminder}:task))\n}\n\n\n  return (\n    <div className=\"container\">\n      <Headerã€€onAdd={() => setShowAddTask\n        (!showAddTask)}\n        showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks = {tasks} onDelete={deleteTask} onToggle = {toggleReminder}/> : 'No Tasks to Show' }\n    </div>\n  );\n}\n\nexport default App \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}